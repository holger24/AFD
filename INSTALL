
0.) If you do not have a configure file you can create it by running the
    script ac-tools/bootstrap. This script needs autoconfig and automake.

1.) Run   ./configure   to generate config.h and the various Makefiles.
    ./configure --help   gives a list of possible options with slightly
    longer descriptions in README.configure.

    Some systems require unusual options for compilation or linking that
    the `configure' script does not know about.  You can give `configure'
    initial values for variables by setting them in the environment.

    You can do that on the command line like this:

         ./configure CC=c89 CFLAGS=-O2 LIBS=-lposix

2.) Set any other main preferences in:

         src/afdsetup.h
         src/init_afd/afddefs.h

    But the defaults should be okay.

3.) Build it:

          make

4.) After everything is compiled, install everything:

          make install

    Here are some more make options, mostly usfull if you are a
    developer:

    clean            : Removes all binaries, library, object files
                       generated by a build.
    distclean        : Same as above, but additionally delete all
                       files created by configure.
    maintainer-clean : Similar to the above only that it also removes
                       all files generated by autoconfig and automake.
    rpm              : Create a RPM.


5.) Setting up AFD

    The AFD can be configured in two files, DIR_CONFIG and HOST_CONFIG,
    these can be found in the directory etc. Of these only the DIR_CONFIG
    file is absolutely necessary, otherwise the AFD will not start up.

    The following is an example entry in the DIR_CONFIG:

    [directory]
    /home/afd/data

            [files]
            *

                    [destination]

                            [recipient]
                            ftp://user:passwd@test1//dir1/dir2

                            [options]
                            archive 3
                            lock DOT
                            priority 0

    This tells the AFD to send any files (*) via FTP in the directory
    /home/afd/data to the user 'user' at host test1 with the password
    'passwd' into the directory '/dir1/dir2'. It also tells the AFD to
    archive these files for three days and to send them with the priority
    0 (very high). The option 'lock DOT' tells to send the files in dot
    notation, i.e. the file name is first written with a dot at the beg-
    ining. When the file has been transmitted it is renamed to its original
    name.


6.) Starting the AFD

    To run the AFD ensure that the path of the binaries is in the
    environment variable PATH. Set the environment variable AFD_WORK_DIR
    to where you want the AFD to be running (ie. where it put its log files,
    statistics, fifos, etc).  Make certain that you have valid entries in the
    DIR_CONFIG, otherwise it will not run.

    There are two possible ways to start the AFD. If you are running X you
    just need to enter 'afd'. This will start all process needed to run the
    AFD and the 'afd_ctrl' window. If you do not want to have the 'afd_ctrl'
    window you can start the AFD only by entering 'afd -a'.


7.) Stopping the AFD

    Stopping the AFD is always done by entering 'afd -s'. This will stop
    all process and remove all shared memory areas. Even when the AFD
    fails to start properly, always use this command to stop it again.
